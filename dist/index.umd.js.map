{"version":3,"file":"index.umd.js","sources":["../src/api/index.js","../src/photo/index.js","../src/index.js"],"sourcesContent":["import dsBridge from 'dsbridge'\n\n// 检测原生是否存在该方法\nconst hasNativeMethod = (funcName, type) => {\n  return dsBridge.hasNativeMethod(funcName, type)\n}\n\n// js注册同步方法\nconst register = (name, fun, asyn) => {\n  dsBridge.register(name, fun, asyn)\n}\n\n// js注册异步方法\nconst registerAsyn = (name, fun) => {\n  dsBridge.registerAsyn(name, fun)\n}\n\n// 判断设备是否是真机 -1未知设备 0真机 1模拟器\nconst isMobile = () => {\n  let res = dsBridge.call('isMobile')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.err\n  }else {\n    return -1\n  }\n}\n\nconst asyncIsMobile = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('isMobile', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        // return Promise.resolve(response.err)\n        resolve(response.err)\n      }else {\n        // return Promise.resolve(-1)\n        resolve(-1)\n      }\n    })\n  })\n}\n\n// 同步获取原生数据\nconst getItem = (key) => {\n  let res = dsBridge.call('getItem',key)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步获取原生数据\nconst asyncGetItem = (key) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getItem',key, (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 同步存储数据到原生\nconst setItem = (obj) => {\n  return dsBridge.call('setItem', obj)\n}\n\n// 异步存储数据到原生\nconst asyncSetItem = (obj) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('setItem', obj, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 同步打电话\nconst callPhone = (mobile) => {\n  return dsBridge.call('callPhone', mobile)\n}\n\n// 异步打电话\nconst asyncCallPhone = (mobile) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('callPhone', mobile, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取设备信息\nconst getDeviceInfo = () => {\n  let res = dsBridge.call('getDeviceInfo')\n  if(res) {\n    return res\n  }else {\n    return {}\n  }\n}\n\n// 异步获取设备信息\nconst asyncGetDeviceInfo = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceInfo', (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve({})\n      }\n    })\n  })\n}\n\n// 获取推送的token\nconst getDeviceToken = () => {\n  let res = dsBridge.call('getDeviceToken')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.deviceToken\n  }else {\n    return ''\n  }\n}\n\n// 异步推送的token\nconst asyncGetDeviceToken = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceToken', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response.deviceToken)\n        }else {\n          resolve('')\n        }\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 打开新的web页\nconst openFrame = (url) => {\n  let res = dsBridge.call('openFrame', url)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步打开新的web页\nconst asyncOpenFrame = (url) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('openFrame', url, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取页面注入的参数\nconst getParams = () => {\n  let res = dsBridge.call('getParams')\n  if(res) {\n    let response = JSON.parse(res)\n    return response\n  }else {\n    return {}\n  }\n}\n\n// 异步获取页面注入的参数\nconst asyncGetParams = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getParams', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response)\n        }else {\n          resolve({})\n        }\n      }else{\n        resolve({})\n      }\n    })\n  })\n}\n\n// 关闭当前页面\nconst closeView = () => {\n  return dsBridge.call('closeView')\n}\n\n// 异步关闭当前页面\nconst asyncCloseView = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('closeView', (res) => {\n      resolve(JSON.stringify({err: 0,message: '关闭成功'}))\n    })\n  })\n}\n\nconst bridge = {\n  hasNativeMethod,\n  register,\n  registerAsyn,\n  isMobile,\n  asyncIsMobile,\n  getItem,\n  asyncGetItem,\n  setItem,\n  asyncSetItem,\n  callPhone,\n  asyncCallPhone,\n  getDeviceInfo,\n  asyncGetDeviceInfo,\n  getDeviceToken,\n  asyncGetDeviceToken,\n  openFrame,\n  asyncOpenFrame,\n  getParams,\n  asyncGetParams,\n  closeView,\n  asyncCloseView\n}\n\nexport default bridge\n","import dsBridge from 'dsbridge'\n\n// 拍照\nconst takePhoto = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'camera'\n    return photoswithOptions(options)\n  }else {\n    return photos('camera')\n  }\n}\n\n// 打开相册获取图片\nconst getPhotos = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'photo'\n    return photoswithOptions(options)\n  }else {\n    return photos('photo')\n  }\n}\n\n// 默认参数调起相机或者相册\nconst photos = (type) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photos', type, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photoswithOptions = (options) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photoswithOptions', options, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photo = {\n  takePhoto,\n  getPhotos\n}\n\nexport default photo\n","import api from './api/index'\nimport photo from './photo/index'\n\nexport default class Bridge {\n  constructor(props) {\n    if(props) {\n\n    }\n  }\n  /**\n   * 判断原生是否有该方法\n   * funcName: 需要判断的方法名,可以包含命名空间\n   * type: 可选参数，[\"all\"|\"syn\"|\"asyn\" ], 默认是 \"all\".\n  */\n  hasNativeMethod(funcName, type) {\n    return api.hasNativeMethod(funcName, type)\n  }\n\n  /******** js不支持重载 所以不支持同名的同异步方法的注册*******/\n  // 注册同步方法给原生调用\n  register(name, fun, asyn) {\n    api.register(name, fun, asyn)\n  }\n  \n  // js注册异步方法\n  registerAsyn(name, fun) {\n    return api.registerAsyn(name, fun)\n  }\n\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  isMobile() {\n    return api.isMobile()\n  }\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  asyncIsMobile() {\n    return api.asyncIsMobile()\n  }\n\n  // 同步获取原生数据\n  getItem(key) {\n    return api.getItem(key)\n  }\n\n  // 异步获取原生数据\n  asyncGetItem(key) {\n    return api.asyncGetItem(key)\n  }\n\n  // 同步存储数据到原生\n  setItem(obj) {\n    return api.setItem(obj)\n  }\n\n  // 异步存储数据到原生\n  asyncSetItem(obj) {\n    return api.asyncSetItem(obj)\n  }\n\n  // 同步打电话\n  callPhone(mobile) {\n    return api.callPhone(mobile)\n  }\n\n  // 异步打电话\n  asyncCallPhone(mobile) {\n    return api.asyncCallPhone(mobile)\n  }\n\n  // 获取设备信息\n  getDeviceInfo() {\n    return api.getDeviceInfo()\n  }\n\n  // 异步获取设备信息\n  asyncGetDeviceInfo() {\n    return api.asyncGetDeviceInfo()\n  }\n\n  // 获取推送的token\n  getDeviceToken() {\n    return api.getDeviceToken()\n  }\n\n  // 异步推送的token\n  asyncGetDeviceToken() {\n    return api.asyncGetDeviceToken()\n  }\n\n  // 打开新的web页\n  openFrame(url) {\n    return api.openFrame(url)\n  }\n\n  // 异步打开新的web页\n  asyncOpenFrame(url) {\n    return api.asyncOpenFrame(url)\n  }\n\n  // 获取页面注入的参数\n  getParams() {\n    return api.getParams()\n  }\n\n  // 异步获取页面注入的参数\n  asyncGetParams() {\n    return api.asyncGetParams()\n  }\n\n  // 关闭当前页面\n  closeView() {\n    return api.closeView()\n  }\n\n  // 异步关闭当前页面\n  asyncCloseView() {\n    return api.asyncCloseView()\n  }\n\n  // 调起拍照\n  takePhoto(options) {\n    return photo.takePhoto(options)\n  }\n\n  // 调起相册选择\n  getPhotos(options) {\n    return photo.getPhotos(options)\n  }\n}\n"],"names":["photos","type","Promise","resolve","reject","dsBridge","call","res","photoswithOptions","options","props","hasNativeMethod","funcName","api","register","name","fun","asyn","registerAsyn","isMobile","JSON","parse","err","asyncIsMobile","response","getItem","key","message","asyncGetItem","setItem","obj","asyncSetItem","callPhone","mobile","asyncCallPhone","getDeviceInfo","asyncGetDeviceInfo","getDeviceToken","deviceToken","asyncGetDeviceToken","openFrame","url","asyncOpenFrame","getParams","asyncGetParams","closeView","asyncCloseView","stringify","takePhoto","photo","getPhotos"],"mappings":"8RAGA,ICoBMA,EAAS,SAACC,GACd,WAAWC,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,WAAYL,EAAM,SAACM,GAC/BJ,EAAQI,QAKRC,EAAoB,SAACC,GACzB,WAAWP,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,sBAAuBG,EAAS,SAACF,GAC7CJ,EAAQI,0BC9BZ,WAAYG,+BAUZC,gBAAA,SAAgBC,EAAUX,GACxB,OFZoB,SAACW,EAAUX,GACjC,OAAOI,EAASM,gBAAgBC,EAAUX,GEWjCY,CAAoBD,EAAUX,MAKvCa,SAAA,SAASC,EAAMC,EAAKC,IFZL,SAACF,EAAMC,EAAKC,GAC3BZ,EAASS,SAASC,EAAMC,EAAKC,GEY3BJ,CAAaE,EAAMC,EAAKC,MAI1BC,aAAA,SAAaH,EAAMC,GACjB,OFbiB,SAACD,EAAMC,GAC1BX,EAASa,aAAaH,EAAMC,GEYnBH,CAAiBE,EAAMC,MAIhCG,SAAA,WACE,OFZEZ,EAAMF,EAASC,KAAK,aAEPc,KAAKC,MAAMd,GACVe,KAER,EANK,IACXf,KEeJgB,cAAA,WACE,WFNSrB,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,WAAY,SAACC,GACzB,GAAGA,EAAK,CACN,IAAIiB,EAAWJ,KAAKC,MAAMd,GAE1BJ,EAAQqB,EAASF,UAGjBnB,GAAS,UEEfsB,QAAA,SAAQC,GACN,OFIY,SAACA,GACf,IAAInB,EAAMF,EAASC,KAAK,UAAUoB,GAClC,OAAGnB,EACca,KAAKC,MAAMd,GACVoB,QAET,GEVAd,CAAYa,MAIrBE,aAAA,SAAaF,GACX,OFUiB,SAACA,GACpB,WAAWxB,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,UAAUoB,EAAK,SAACnB,GAE1BJ,EADCI,GAGO,QEhBLM,CAAiBa,MAI1BG,QAAA,SAAQC,GACN,OFkBY,SAACA,GACf,OAAOzB,EAASC,KAAK,UAAWwB,GEnBvBjB,CAAYiB,MAIrBC,aAAA,SAAaD,GACX,OFkBiB,SAACA,GACpB,WAAW5B,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,UAAWwB,EAAK,SAACvB,GAC7BJ,EAAQI,OErBHM,CAAiBiB,MAI1BE,UAAA,SAAUC,GACR,OFsBc,SAACA,GACjB,OAAO5B,EAASC,KAAK,YAAa2B,GEvBzBpB,CAAcoB,MAIvBC,eAAA,SAAeD,GACb,OFsBmB,SAACA,GACtB,WAAW/B,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,YAAa2B,EAAQ,SAAC1B,GAClCJ,EAAQI,OEzBHM,CAAmBoB,MAI5BE,cAAA,WACE,OF2BQ9B,EAASC,KAAK,kBAIf,ME3BT8B,mBAAA,WACE,WFgCSlC,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,gBAAiB,SAACC,GAE5BJ,EADCI,GAGO,WEjCd8B,eAAA,WACE,OFwCE9B,EAAMF,EAASC,KAAK,mBAEPc,KAAKC,MAAMd,GACV+B,YAET,GANY,IACjB/B,KEpCJgC,oBAAA,WACE,WF8CSrC,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,iBAAkB,SAACC,GAC/B,GAAGA,EAAK,CACN,IAAIiB,EAAWJ,KAAKC,MAAMd,GAExBJ,EADCqB,EACOA,EAASc,YAET,SAGVnC,EAAQ,WEpDdqC,UAAA,SAAUC,GACR,OF0Dc,SAACA,GACjB,IAAIlC,EAAMF,EAASC,KAAK,YAAamC,GACrC,OAAGlC,EACca,KAAKC,MAAMd,GACVoB,QAET,GEhEAd,CAAc4B,MAIvBC,eAAA,SAAeD,GACb,OFgEmB,SAACA,GACtB,WAAWvC,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,YAAamC,EAAK,SAAClC,GAC/BJ,EAAQI,OEnEHM,CAAmB4B,MAI5BE,UAAA,WACE,OFqEEpC,EAAMF,EAASC,KAAK,cAEPc,KAAKC,MAAMd,GAGnB,GANO,IACZA,KEjEJqC,eAAA,WACE,WF2ES1C,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,YAAa,SAACC,GAC1B,GAAGA,EAAK,CACN,IAAIiB,EAAWJ,KAAKC,MAAMd,GAExBJ,EADCqB,GAGO,SAGVrB,EAAQ,WEjFd0C,UAAA,WACE,OFwFKxC,EAASC,KAAK,gBEpFrBwC,eAAA,WACE,WFwFS5C,QAAQ,SAACC,EAASC,GAC3BC,EAASC,KAAK,YAAa,SAACC,GAC1BJ,EAAQiB,KAAK2B,UAAU,CAACzB,IAAK,EAAEK,QAAS,iBEtF5CqB,UAAA,SAAUvC,GACR,ODrHc,SAACA,GACjB,MAAuB,iBAAbA,GACRA,EAAO,KAAW,SACXD,EAAkBC,IAElBT,EAAO,UCgHPiD,CAAgBxC,MAIzByC,UAAA,SAAUzC,GACR,ODhHc,SAACA,GACjB,MAAuB,iBAAbA,GACRA,EAAO,KAAW,QACXD,EAAkBC,IAElBT,EAAO,SC2GPiD,CAAgBxC"}