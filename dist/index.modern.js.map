{"version":3,"file":"index.modern.js","sources":["../src/api/index.js","../src/photo/index.js","../src/index.js"],"sourcesContent":["import dsBridge from 'dsbridge'\n\n// 检测原生是否存在该方法\nconst hasNativeMethod = (funcName, type) => {\n  return dsBridge.hasNativeMethod(funcName, type)\n}\n\n// js注册同步方法\nconst register = (name, fun, asyn) => {\n  dsBridge.register(name, fun, asyn)\n}\n\n// js注册异步方法\nconst registerAsyn = (name, fun) => {\n  dsBridge.registerAsyn(name, fun)\n}\n\n// 判断设备是否是真机 -1未知设备 0真机 1模拟器\nconst isMobile = () => {\n  let res = dsBridge.call('isMobile')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.err\n  }else {\n    return -1\n  }\n}\n\nconst asyncIsMobile = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('isMobile', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        // return Promise.resolve(response.err)\n        resolve(response.err)\n      }else {\n        // return Promise.resolve(-1)\n        resolve(-1)\n      }\n    })\n  })\n}\n\n// 同步获取原生数据\nconst getItem = (key) => {\n  let res = dsBridge.call('getItem',key)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步获取原生数据\nconst asyncGetItem = (key) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getItem',key, (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 同步存储数据到原生\nconst setItem = (obj) => {\n  return dsBridge.call('setItem', obj)\n}\n\n// 异步存储数据到原生\nconst asyncSetItem = (obj) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('setItem', obj, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 同步打电话\nconst callPhone = (mobile) => {\n  return dsBridge.call('callPhone', mobile)\n}\n\n// 异步打电话\nconst asyncCallPhone = (mobile) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('callPhone', mobile, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取设备信息\nconst getDeviceInfo = () => {\n  let res = dsBridge.call('getDeviceInfo')\n  if(res) {\n    return res\n  }else {\n    return {}\n  }\n}\n\n// 异步获取设备信息\nconst asyncGetDeviceInfo = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceInfo', (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve({})\n      }\n    })\n  })\n}\n\n// 获取推送的token\nconst getDeviceToken = () => {\n  let res = dsBridge.call('getDeviceToken')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.deviceToken\n  }else {\n    return ''\n  }\n}\n\n// 异步推送的token\nconst asyncGetDeviceToken = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceToken', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response.deviceToken)\n        }else {\n          resolve('')\n        }\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 打开新的web页\nconst openFrame = (url) => {\n  let res = dsBridge.call('openFrame', url)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步打开新的web页\nconst asyncOpenFrame = (url) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('openFrame', url, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取页面注入的参数\nconst getParams = () => {\n  let res = dsBridge.call('getParams')\n  if(res) {\n    let response = JSON.parse(res)\n    return response\n  }else {\n    return {}\n  }\n}\n\n// 异步获取页面注入的参数\nconst asyncGetParams = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getParams', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response)\n        }else {\n          resolve({})\n        }\n      }else{\n        resolve({})\n      }\n    })\n  })\n}\n\n// 关闭当前页面\nconst closeView = () => {\n  return dsBridge.call('closeView')\n}\n\n// 异步关闭当前页面\nconst asyncCloseView = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('closeView', (res) => {\n      resolve(JSON.stringify({err: 0,message: '关闭成功'}))\n    })\n  })\n}\n\nconst bridge = {\n  hasNativeMethod,\n  register,\n  registerAsyn,\n  isMobile,\n  asyncIsMobile,\n  getItem,\n  asyncGetItem,\n  setItem,\n  asyncSetItem,\n  callPhone,\n  asyncCallPhone,\n  getDeviceInfo,\n  asyncGetDeviceInfo,\n  getDeviceToken,\n  asyncGetDeviceToken,\n  openFrame,\n  asyncOpenFrame,\n  getParams,\n  asyncGetParams,\n  closeView,\n  asyncCloseView\n}\n\nexport default bridge\n","import dsBridge from 'dsbridge'\n\n// 拍照\nconst takePhoto = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'camera'\n    return photoswithOptions(options)\n  }else {\n    return photos('camera')\n  }\n}\n\n// 打开相册获取图片\nconst getPhotos = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'photo'\n    return photoswithOptions(options)\n  }else {\n    return photos('photo')\n  }\n}\n\n// 默认参数调起相机或者相册\nconst photos = (type) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photos', type, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photoswithOptions = (options) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photoswithOptions', options, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photo = {\n  takePhoto,\n  getPhotos\n}\n\nexport default photo\n","import api from './api/index'\nimport photo from './photo/index'\n\nexport default class Bridge {\n  constructor(props) {\n    if(props) {\n\n    }\n  }\n  /**\n   * 判断原生是否有该方法\n   * funcName: 需要判断的方法名,可以包含命名空间\n   * type: 可选参数，[\"all\"|\"syn\"|\"asyn\" ], 默认是 \"all\".\n  */\n  hasNativeMethod(funcName, type) {\n    return api.hasNativeMethod(funcName, type)\n  }\n\n  /******** js不支持重载 所以不支持同名的同异步方法的注册*******/\n  // 注册同步方法给原生调用\n  register(name, fun, asyn) {\n    api.register(name, fun, asyn)\n  }\n  \n  // js注册异步方法\n  registerAsyn(name, fun) {\n    return api.registerAsyn(name, fun)\n  }\n\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  isMobile() {\n    return api.isMobile()\n  }\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  asyncIsMobile() {\n    return api.asyncIsMobile()\n  }\n\n  // 同步获取原生数据\n  getItem(key) {\n    return api.getItem(key)\n  }\n\n  // 异步获取原生数据\n  asyncGetItem(key) {\n    return api.asyncGetItem(key)\n  }\n\n  // 同步存储数据到原生\n  setItem(obj) {\n    return api.setItem(obj)\n  }\n\n  // 异步存储数据到原生\n  asyncSetItem(obj) {\n    return api.asyncSetItem(obj)\n  }\n\n  // 同步打电话\n  callPhone(mobile) {\n    return api.callPhone(mobile)\n  }\n\n  // 异步打电话\n  asyncCallPhone(mobile) {\n    return api.asyncCallPhone(mobile)\n  }\n\n  // 获取设备信息\n  getDeviceInfo() {\n    return api.getDeviceInfo()\n  }\n\n  // 异步获取设备信息\n  asyncGetDeviceInfo() {\n    return api.asyncGetDeviceInfo()\n  }\n\n  // 获取推送的token\n  getDeviceToken() {\n    return api.getDeviceToken()\n  }\n\n  // 异步推送的token\n  asyncGetDeviceToken() {\n    return api.asyncGetDeviceToken()\n  }\n\n  // 打开新的web页\n  openFrame(url) {\n    return api.openFrame(url)\n  }\n\n  // 异步打开新的web页\n  asyncOpenFrame(url) {\n    return api.asyncOpenFrame(url)\n  }\n\n  // 获取页面注入的参数\n  getParams() {\n    return api.getParams()\n  }\n\n  // 异步获取页面注入的参数\n  asyncGetParams() {\n    return api.asyncGetParams()\n  }\n\n  // 关闭当前页面\n  closeView() {\n    return api.closeView()\n  }\n\n  // 异步关闭当前页面\n  asyncCloseView() {\n    return api.asyncCloseView()\n  }\n\n  // 调起拍照\n  takePhoto(options) {\n    return photo.takePhoto(options)\n  }\n\n  // 调起相册选择\n  getPhotos(options) {\n    return photo.getPhotos(options)\n  }\n}\n"],"names":["photos","type","Promise","resolve","reject","dsBridge","call","res","photoswithOptions","options","constructor","props","hasNativeMethod","funcName","api","register","name","fun","asyn","registerAsyn","isMobile","JSON","parse","err","asyncIsMobile","response","getItem","key","message","asyncGetItem","setItem","obj","asyncSetItem","callPhone","mobile","asyncCallPhone","getDeviceInfo","asyncGetDeviceInfo","getDeviceToken","deviceToken","asyncGetDeviceToken","openFrame","url","asyncOpenFrame","getParams","asyncGetParams","closeView","asyncCloseView","stringify","takePhoto","photo","getPhotos"],"mappings":"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"}