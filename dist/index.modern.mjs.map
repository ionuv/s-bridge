{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.js","../src/photo/index.js","../src/index.ts"],"sourcesContent":["import dsBridge from 'dsbridge'\n\n// 检测原生是否存在该方法\nconst hasNativeMethod = (funcName, type) => {\n  return dsBridge.hasNativeMethod(funcName, type)\n}\n\n// js注册同步方法\nconst register = (name, fun, asyn) => {\n  dsBridge.register(name, fun, asyn)\n}\n\n// js注册异步方法\nconst registerAsyn = (name, fun) => {\n  dsBridge.registerAsyn(name, fun)\n}\n\n// 判断设备是否是真机 -1未知设备 0真机 1模拟器\nconst isMobile = () => {\n  let res = dsBridge.call('isMobile')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.err\n  }else {\n    return -1\n  }\n}\n\nconst asyncIsMobile = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('isMobile', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        // return Promise.resolve(response.err)\n        resolve(response.err)\n      }else {\n        // return Promise.resolve(-1)\n        resolve(-1)\n      }\n    })\n  })\n}\n\n// 同步获取原生数据\nconst getItem = (key) => {\n  let res = dsBridge.call('getItem',key)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步获取原生数据\nconst asyncGetItem = (key) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getItem',key, (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 同步存储数据到原生\nconst setItem = (obj) => {\n  return dsBridge.call('setItem', obj)\n}\n\n// 异步存储数据到原生\nconst asyncSetItem = (obj) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('setItem', obj, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 同步打电话\nconst callPhone = (mobile) => {\n  return dsBridge.call('callPhone', mobile)\n}\n\n// 异步打电话\nconst asyncCallPhone = (mobile) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('callPhone', mobile, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取设备信息\nconst getDeviceInfo = () => {\n  let res = dsBridge.call('getDeviceInfo')\n  if(res) {\n    return res\n  }else {\n    return {}\n  }\n}\n\n// 异步获取设备信息\nconst asyncGetDeviceInfo = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceInfo', (res) => {\n      if(res) {\n        resolve(res)\n      }else {\n        resolve({})\n      }\n    })\n  })\n}\n\n// 获取推送的token\nconst getDeviceToken = () => {\n  let res = dsBridge.call('getDeviceToken')\n  if(res) {\n    let response = JSON.parse(res)\n    return response.deviceToken\n  }else {\n    return ''\n  }\n}\n\n// 异步推送的token\nconst asyncGetDeviceToken = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getDeviceToken', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response.deviceToken)\n        }else {\n          resolve('')\n        }\n      }else {\n        resolve('')\n      }\n    })\n  })\n}\n\n// 打开新的web页\nconst openFrame = (url) => {\n  let res = dsBridge.call('openFrame', url)\n  if(res) {\n    let response = JSON.parse(res)\n    return response.message\n  }else {\n    return ''\n  }\n}\n\n// 异步打开新的web页\nconst asyncOpenFrame = (url) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('openFrame', url, (res) => {\n      resolve(res)\n    })\n  })\n}\n\n// 获取页面注入的参数\nconst getParams = () => {\n  let res = dsBridge.call('getParams')\n  if(res) {\n    let response = JSON.parse(res)\n    return response\n  }else {\n    return {}\n  }\n}\n\n// 异步获取页面注入的参数\nconst asyncGetParams = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('getParams', (res) => {\n      if(res) {\n        let response = JSON.parse(res)\n        if(response) {\n          resolve(response)\n        }else {\n          resolve({})\n        }\n      }else{\n        resolve({})\n      }\n    })\n  })\n}\n\n// 关闭当前页面\nconst closeView = () => {\n  return dsBridge.call('closeView')\n}\n\n// 异步关闭当前页面\nconst asyncCloseView = () => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('closeView', (res) => {\n      resolve(JSON.stringify({err: 0,message: '关闭成功'}))\n    })\n  })\n}\n\nconst bridge = {\n  hasNativeMethod,\n  register,\n  registerAsyn,\n  isMobile,\n  asyncIsMobile,\n  getItem,\n  asyncGetItem,\n  setItem,\n  asyncSetItem,\n  callPhone,\n  asyncCallPhone,\n  getDeviceInfo,\n  asyncGetDeviceInfo,\n  getDeviceToken,\n  asyncGetDeviceToken,\n  openFrame,\n  asyncOpenFrame,\n  getParams,\n  asyncGetParams,\n  closeView,\n  asyncCloseView\n}\n\nexport default bridge\n","import dsBridge from 'dsbridge'\n\n// 拍照\nconst takePhoto = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'camera'\n    return photoswithOptions(options)\n  }else {\n    return photos('camera')\n  }\n}\n\n// 打开相册获取图片\nconst getPhotos = (options) => {\n  if(typeof(options) === 'object') {\n    options['type'] = 'photo'\n    return photoswithOptions(options)\n  }else {\n    return photos('photo')\n  }\n}\n\n// 默认参数调起相机或者相册\nconst photos = (type) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photos', type, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photoswithOptions = (options) => {\n  return new Promise((resolve, reject) => {\n    dsBridge.call('b.photoswithOptions', options, (res) => {\n      resolve(res)\n    })\n  })\n}\n\nconst photo = {\n  takePhoto,\n  getPhotos\n}\n\nexport default photo\n","// interface Bridge{\n//   // call (handlerName: string, args?: any, responseCallback?: (retValue: any) => void): any;\n//   // call<T, R> (handlerName: string, args?: T, responseCallback?: (retValue: R) => void): R;\n\n//   // register (handlerName: string, handler: object | (() => any), async?: boolean): void;\n//   // register<F> (handlerName: string, handler: F, async?: boolean): void;\n\n//   // registerAsyn (handlerName: string, handler: object | (() => void)): void;\n//   // registerAsyn<F> (handlerName: string, handler: F): void;\n\n//   hasNativeMethod(funcName: string, type?: ('all' | 'asyn' | 'syn')): boolean;\n\n//   // 注册同步方法给原生调用\n//   register(name: string, fun: object | (() => any), asyn?: boolean): void;\n  \n//   // js注册异步方法\n//   registerAsyn(name: string, fun: object | (() => void)): any;\n\n//   // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n//   isMobile(): number;\n//   // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n//   asyncIsMobile(): any;\n\n//   // 同步获取原生数据\n//   getItem(key: string): any;\n\n//   // 异步获取原生数据\n//   asyncGetItem(key: string): any;\n\n//   // 同步存储数据到原生\n//   setItem(obj: object): any;\n\n//   // 异步存储数据到原生\n//   asyncSetItem(obj: object): any;\n\n//   // 同步打电话\n//   callPhone(mobile: (string | number)): any; \n\n//   // 异步打电话\n//   asyncCallPhone(mobile: (string | number)): any;\n\n//   // 获取设备信息\n//   getDeviceInfo(): any;\n\n//   // 异步获取设备信息\n//   asyncGetDeviceInfo(): any;\n\n//   // 获取推送的token\n//   getDeviceToken(): string;\n\n//   // 异步推送的token\n//   asyncGetDeviceToken(): any;\n\n//   // 打开新的web页\n//   openFrame(url: string): any;\n\n//   // 异步打开新的web页\n//   asyncOpenFrame(url: string): any; \n\n//   // 获取页面注入的参数\n//   getParams(): object;\n\n//   // 异步获取页面注入的参数\n//   asyncGetParams(): any;\n\n//   // 关闭当前页面\n//   closeView(): any;\n\n//   // 异步关闭当前页面\n//   asyncCloseView(): any;\n\n//   // 调起拍照\n//   takePhoto(options?: object): any; \n\n//   // 调起相册选择\n//   getPhotos(options?: object): any;\n// }\n\nimport api from './api/index';\nimport photo from './photo/index';\n\nclass sbridge {\n\n  hasNativeMethod(funcName: string, type?: ('all' | 'asyn' | 'syn')): boolean {\n    return api.hasNativeMethod(funcName, type);\n  }\n  // 注册同步方法给原生调用\n  register(name: string, fun: object | (() => any), asyn?: boolean): void {\n    api.register(name, fun, asyn);\n  }\n  \n  // js注册异步方法\n  registerAsyn(name: string, fun: object | (() => void)): any {\n    return api.registerAsyn(name, fun);\n  }\n\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  isMobile(): number {\n    return api.isMobile();\n  }\n  // 判断设备是否是真机 -1未知设备 0真机 1模拟器\n  asyncIsMobile(): any {\n    return api.asyncIsMobile();\n  }\n\n  // 同步获取原生数据\n  getItem(key: string): any {\n    return api.getItem(key);\n  }\n\n  // 异步获取原生数据\n  asyncGetItem(key: string): any {\n    return api.asyncGetItem(key);\n  }\n\n  // 同步存储数据到原生\n  setItem(obj: object): any {\n    return api.setItem(obj);\n  }\n\n  // 异步存储数据到原生\n  asyncSetItem(obj: object): any {\n    return api.asyncSetItem(obj);\n  }\n\n  // 同步打电话\n  callPhone(mobile: (string | number)): any {\n    return api.callPhone(mobile);\n  }\n\n  // 异步打电话\n  asyncCallPhone(mobile: (string | number)): any {\n    return api.asyncCallPhone(mobile);\n  }\n\n  // 获取设备信息\n  getDeviceInfo(): any {\n    return api.getDeviceInfo();\n  }\n\n  // 异步获取设备信息\n  asyncGetDeviceInfo(): any {\n    return api.asyncGetDeviceInfo();\n  }\n\n  // 获取推送的token\n  getDeviceToken(): string {\n    return api.getDeviceToken();\n  }\n\n  // 异步推送的token\n  asyncGetDeviceToken(): any {\n    return api.asyncGetDeviceToken();\n  }\n\n  // 打开新的web页\n  openFrame(url: string): any {\n    return api.openFrame(url);\n  }\n\n  // 异步打开新的web页\n  asyncOpenFrame(url: string): any {\n    return api.asyncOpenFrame(url);\n  }\n\n  // 获取页面注入的参数\n  getParams(): object {\n    return api.getParams();\n  }\n\n  // 异步获取页面注入的参数\n  asyncGetParams(): any {\n    return api.asyncGetParams();\n  }\n\n  // 关闭当前页面\n  closeView(): any {\n    return api.closeView();\n  }\n\n  // 异步关闭当前页面\n  asyncCloseView(): any {\n    return api.asyncCloseView();\n  }\n\n  // 调起拍照\n  takePhoto(options?: object): any {\n    return photo.takePhoto(options);\n  }\n\n  // 调起相册选择\n  getPhotos(options?: object): any {\n    return photo.getPhotos(options);\n  }\n}\n\n// declare const Bridge: Bridge;\n\nexport default sbridge;\n"],"names":["photos","type","Promise","resolve","reject","dsBridge","call","res","photoswithOptions","options","sbridge","hasNativeMethod","funcName","api","register","name","fun","asyn","registerAsyn","isMobile","JSON","parse","err","asyncIsMobile","response","getItem","key","message","asyncGetItem","setItem","obj","asyncSetItem","callPhone","mobile","asyncCallPhone","getDeviceInfo","asyncGetDeviceInfo","getDeviceToken","deviceToken","asyncGetDeviceToken","openFrame","url","asyncOpenFrame","getParams","asyncGetParams","closeView","asyncCloseView","stringify","takePhoto","photo","getPhotos"],"mappings":"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"}